name: Main

on:
  pull_request:
    branches:
      - main
  repository_dispatch:
  workflow_dispatch:

env:
  default-python-version: 3.8

jobs:

  lint:

    name: Project Quality Analysis
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.default-python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ env.default-python-version }}

      - name: Install PipEnv
        run: |
          pip install pipenv==2022.1.8

      - name: Sync With Repository
        run: |
          pipenv lock
          pipenv sync

      - name: Execute Black
        run: |
          pipenv run black .

      - name: Execute ISort
        run: |
          pipenv run isort .

      - name: Execute Flake8
        run: pipenv run flake8 --exclude dist,build

      - name: Execute PyLint
        run: pipenv run pylint ${{github.workspace}}/test

      - name: Execute MyPy
        run: pipenv run mypy --strict test

      # - name: Execute PyMarkdown on Current Docs
      #   run: pipenv run python ${{github.workspace}}/main.py --config ${{github.workspace}}/clean.json scan ${{github.workspace}} ${{github.workspace}}/docs

  pre-commit-tests:

    name: Pre-Commit Tests
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10"]
        platform: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 10
    defaults:
      run:
        shell: bash

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install PipEnv
        run: |
          pip install pipenv==2022.1.8

      - name: Sync With Repository
        run: |
          python modify_pipfile.py
          pipenv lock
          pipenv sync
          pipenv uninstall pytest-html
          pipenv graph

      # - name: Display
      #   env:
      #     JSON: ${{ toJson(github.event) }}
      #   run: |
      #     echo $JSON

      - name: Get Hash From Event Information
        if: github.event.action == 'request-integration' && github.event.client_payload.repository == 'jackdewinter/pymarkdown'
        run: |
          echo "REMOTE_SHA=${{ github.event.client_payload.sha }}" >> $GITHUB_ENV

      - name: Execute Tests
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.INTER_PROJECT_ACCESS_TOKEN }}
          REMOTE_SHA: ${{ env.REMOTE_SHA }}
        run: |
          echo "Running tests with hash '$REMOTE_SHA'."
          pipenv run pytest --durations=0 --capture=tee-sys -m pre_commit

  install-package-tests:

    name: Install Package Tests
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10"]
        platform: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 10
    defaults:
      run:
        shell: bash

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install PipEnv
        run: |
          pip install pipenv==2022.1.8

      - name: Sync With Repository
        run: |
          python modify_pipfile.py
          pipenv lock
          pipenv sync
          pipenv uninstall pytest-html

      # - name: Display
      #   env:
      #     JSON: ${{ toJson(github.event) }}
      #   run: |
      #     echo $JSON

      - name: Get Run ID From Event Information
        if: github.event.action == 'request-integration' && github.event.client_payload.repository == 'jackdewinter/pymarkdown'
        run: |
          echo "REMOTE_RUN_ID=${{ github.event.client_payload.run_id }}" >> $GITHUB_ENV

      - name: Execute Tests
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.INTER_PROJECT_ACCESS_TOKEN }}
          REMOTE_RUN_ID: ${{ env.REMOTE_RUN_ID}}
        run: |
          echo "REMOTE_RUN_ID=$REMOTE_RUN_ID"
          pipenv run pytest --durations=0 --capture=tee-sys -m packages
